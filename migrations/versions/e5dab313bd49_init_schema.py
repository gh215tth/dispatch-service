"""init schema

Revision ID: e5dab313bd49
Revises: 
Create Date: 2025-09-02 09:50:12.876537

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'e5dab313bd49'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('document_types',
    sa.Column('document_type_id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.PrimaryKeyConstraint('document_type_id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('issuing_bodies',
    sa.Column('issuing_body_id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('issuing_body_id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('dispatches',
    sa.Column('dispatch_id', sa.UUID(), nullable=False),
    sa.Column('document_number', sa.String(length=100), nullable=False),
    sa.Column('summary', sa.Text(), nullable=True),
    sa.Column('page_count', sa.Integer(), nullable=True),
    sa.Column('security_level', sa.Enum('public', 'internal', 'confidential', name='security_level'), nullable=False),
    sa.Column('urgency_level', sa.Enum('normal', 'urgent', 'immediate', name='urgency_level'), nullable=False),
    sa.Column('processing_status', sa.Enum('pending', 'in_progress', 'completed', 'archived', name='processing_status'), nullable=False),
    sa.Column('document_type_id', sa.UUID(), nullable=False),
    sa.Column('issuing_body_id', sa.UUID(), nullable=False),
    sa.Column('creator_user_id', sa.UUID(), nullable=False),
    sa.Column('approver_user_id', sa.UUID(), nullable=True),
    sa.Column('arrival_timestamp', sa.DateTime(), nullable=True),
    sa.Column('effective_timestamp', sa.DateTime(), nullable=True),
    sa.Column('expiration_timestamp', sa.DateTime(), nullable=True),
    sa.Column('approved_at', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['document_type_id'], ['document_types.document_type_id'], ),
    sa.ForeignKeyConstraint(['issuing_body_id'], ['issuing_bodies.issuing_body_id'], ),
    sa.PrimaryKeyConstraint('dispatch_id'),
    sa.UniqueConstraint('document_number')
    )
    op.create_table('dispatch_attachments',
    sa.Column('dispatch_id', sa.UUID(), nullable=False),
    sa.Column('drive_item_id', sa.UUID(), nullable=False),
    sa.Column('attached_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['dispatch_id'], ['dispatches.dispatch_id'], ),
    sa.PrimaryKeyConstraint('dispatch_id', 'drive_item_id')
    )
    op.create_table('dispatch_comments',
    sa.Column('comment_id', sa.UUID(), nullable=False),
    sa.Column('dispatch_id', sa.UUID(), nullable=False),
    sa.Column('author_user_id', sa.UUID(), nullable=False),
    sa.Column('content', sa.Text(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['dispatch_id'], ['dispatches.dispatch_id'], ),
    sa.PrimaryKeyConstraint('comment_id')
    )
    op.create_table('dispatch_followers',
    sa.Column('dispatch_id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('followed_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['dispatch_id'], ['dispatches.dispatch_id'], ),
    sa.PrimaryKeyConstraint('dispatch_id', 'user_id')
    )
    op.create_table('dispatch_processors',
    sa.Column('dispatch_id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('assigned_at', sa.DateTime(), nullable=False),
    sa.Column('deadline', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['dispatch_id'], ['dispatches.dispatch_id'], ),
    sa.PrimaryKeyConstraint('dispatch_id', 'user_id')
    )
    op.create_table('dispatch_recipients',
    sa.Column('dispatch_id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('notified_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['dispatch_id'], ['dispatches.dispatch_id'], ),
    sa.PrimaryKeyConstraint('dispatch_id', 'user_id')
    )
    op.create_table('dispatch_views',
    sa.Column('view_id', sa.UUID(), nullable=False),
    sa.Column('dispatch_id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('viewed_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['dispatch_id'], ['dispatches.dispatch_id'], ),
    sa.PrimaryKeyConstraint('view_id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('dispatch_views')
    op.drop_table('dispatch_recipients')
    op.drop_table('dispatch_processors')
    op.drop_table('dispatch_followers')
    op.drop_table('dispatch_comments')
    op.drop_table('dispatch_attachments')
    op.drop_table('dispatches')
    op.drop_table('issuing_bodies')
    op.drop_table('document_types')
    # ### end Alembic commands ###
